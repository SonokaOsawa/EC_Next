import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import SearchItems from '../components/molecule/SearchItems';
import { useDispatch, useSelector } from "react-redux";
import { selectItems, Itemtype } from '../features/items';
import Items from '../components/organisms/items';
import { GetStaticProps, NextPage } from "next";
import admin from '../firebase/nodeApp';
import { useState } from 'react';

interface Props {
  items: Itemtype[]
}

const Home: NextPage<Props> = (props) => {
  const items = props.items
  // const items = useSelector(selectItems)
  const [searchItems, setSearchitems] = useState<Itemtype[]>(items)
  const [noSearch, setNosearch] = useState(false)
  const search = (word: string | undefined) => {
    console.log('検索')
    console.log(word)
    if(word === "" || word === undefined){
      setSearchitems(items)
      setNosearch(false)
    }else{
      let searchArray = searchItems.filter((item) => {
        return item.name.indexOf(word) >= 0
      })
      if(searchArray.length === 0){
        setNosearch(true)
      }else{
        setSearchitems(searchArray)
        setNosearch(false)
      }
    }
  }

  return (
    <div>
      <Head>
        <title>ラクラクアロハ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <SearchItems search={search}/>
        <Items items={searchItems} noSearch={noSearch}/>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getStaticProps: GetStaticProps<Props> = async () => {
  let items: Itemtype[] = [];
  const ref= await admin.firestore().collection('items').get();
  ref.docs.map(doc => {
    const data = { 
      id: doc.data().id, 
      name: doc.data().name,
      des: doc.data().des,
      pm: doc.data().pm,
      pl: doc.data().pl,
      img: doc.data().img
    };
    items.push(data);
  });
  return{
    props: {
      items
    }
  }
}

export default Home;